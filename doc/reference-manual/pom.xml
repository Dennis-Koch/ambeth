<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.koch.ambeth</groupId>
	<artifactId>ambeth-documentation</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>com.koch.ambeth</groupId>
		<artifactId>doc-pom</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<extendables.scanner.dir>${project.build.directory}/extendables-scanner</extendables.scanner.dir>
		<inkscape.dir>${project.build.directory}/inkscape</inkscape.dir>
		<miktex.dir>${project.build.directory}/miktex</miktex.dir>
		<inkscape.version>0.92.1</inkscape.version>
		<miktex.version>2.9</miktex.version>
		<classifier>win32.win32.x86_64</classifier>
		<repo.basedir>${project.basedir}/../..</repo.basedir>
		<moduleRootPath>${repo.basedir}/jambeth</moduleRootPath>
		<integrity.dir>${project.build.directory}/integrity</integrity.dir>
		<doc.src.dir>${project.build.directory}/src/java</doc.src.dir>
		<doc.src.lib.dir>${project.build.directory}/src/java/libs</doc.src.lib.dir>
		<data.dir>${project.build.directory}/data</data.dir>
		<latex.temp.dir>target-latex</latex.temp.dir>
		<latex.temp.out.dir>target-latex-output</latex.temp.out.dir>
	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>maven-latex-plugin-repo</id>
			<url>http://akquinet.github.com/maven-latex-plugin/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.koch.ambeth</groupId>
			<artifactId>jambeth-doc-scope</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.koch.ambeth.integrity</groupId>
			<artifactId>ambeth-integrity-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.koch.ambeth</groupId>
			<artifactId>extendables-scanner</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>Generate absolute path properties</id>
						<phase>generate-sources</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<property name="moduleRootPath.absolute" location="${moduleRootPath}" />
								<property name="data.dir.absolute" location="${data.dir}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>Copy PDF file</id>
						<phase>package</phase>
						<configuration>
							<target>
								<copy file="${project.build.directory}/${latex.temp.dir}/Ambeth-Reference.pdf" tofile="${project.build.directory}/Ambeth-Reference-${ambeth.version}.pdf" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>Resolve Ambeth libraries</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>-f</argument>
								<argument>${settings.localRepository}/com/koch/ambeth/jambeth-doc-scope/${ambeth.version}/jambeth-doc-scope-${ambeth.version}.pom</argument>
								<argument>dependency:copy-dependencies</argument>
								<argument>-DoutputDirectory=${doc.src.dir}</argument>
								<argument>-DincludeGroupIds=com.koch.ambeth</argument>
								<argument>-Dmaven.repo.local=${settings.localRepository}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Resolve Ambeth 3rd party libraries</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>-f</argument>
								<argument>${settings.localRepository}/com/koch/ambeth/jambeth-doc-scope/${ambeth.version}/jambeth-doc-scope-${ambeth.version}.pom</argument>
								<argument>dependency:copy-dependencies</argument>
								<argument>-DoutputDirectory=${doc.src.lib.dir}</argument>
								<argument>-DexcludeGroupIds=com.koch.ambeth</argument>
								<argument>-Dmaven.repo.local=${settings.localRepository}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Resolve Source XML project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>-f</argument>
								<argument>${settings.localRepository}/com/koch/ambeth/integrity/ambeth-integrity-java/${ambeth.integrity.version}/ambeth-integrity-java-${ambeth.integrity.version}.pom</argument>
								<argument>dependency:copy-dependencies</argument>
								<argument>-DoutputDirectory=${integrity.dir}</argument>
								<argument>-Dmaven.repo.local=${settings.localRepository}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Resolve Extendables Scanner project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>-f</argument>
								<argument>${settings.localRepository}/com/koch/ambeth/extendables-scanner/${ambeth.extendables.scanner.version}/extendables-scanner-${ambeth.extendables.scanner.version}.pom</argument>
								<argument>dependency:copy-dependencies</argument>
								<argument>-DoutputDirectory=${extendables.scanner.dir}</argument>
								<argument>-Dmaven.repo.local=${settings.localRepository}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Build Source XML files</id>
						<phase>process-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<argument>${integrity.dir}\*;${settings.localRepository}/com/koch/ambeth/integrity/ambeth-integrity-java/${ambeth.integrity.version}/ambeth-integrity-java-${ambeth.integrity.version}.jar</argument>
								<argument>com.koch.classbrowser.java.Program</argument>
								<argument>jarFolders=${doc.src.dir}</argument>
								<argument>libraryJarFolders=${doc.src.lib.dir}</argument>
								<argument>targetPath=${data.dir}</argument>
								<argument>moduleRootPath=${moduleRootPath.absolute}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Mock C# XML file</id>
						<phase>process-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>xcopy</executable>
							<arguments>
								<argument>${data.dir.absolute}\export_java.xml</argument>
								<argument>${data.dir.absolute}\export_csharp.xml*</argument>
								<argument>/Y</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>Extendables Scanner</id>
						<phase>process-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<argument>${extendables.scanner.dir}\*;${settings.localRepository}\com\koch\ambeth\extendables-scanner\${ambeth.extendables.scanner.version}\extendables-scanner-${ambeth.extendables.scanner.version}.jar</argument>
								<argument>com.koch.ambeth.extscanner.Main</argument>
								<argument>scan-path=${data.dir}</argument>
								<argument>source-path="${repo.basedir}/ambeth;${repo.basedir}/jambeth"</argument>
								<argument>target-source-path="${project.build.directory}/src-files"</argument>
								<argument>target-all-dir="${basedir}"</argument>
								<argument>target-extendable-tex-dir="${basedir}/extendable"</argument>
								<argument>target-properties-tex-dir="${basedir}/configuration"</argument>
								<argument>target-feature-tex-dir="${basedir}/feature"</argument>
								<argument>target-module-tex-dir="${basedir}/module"</argument>
								<argument>target-annotation-tex-dir="${basedir}/annotation"</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare MikTeX</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<outputDirectory>${miktex.dir}</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>miktex</groupId>
									<artifactId>miktex</artifactId>
									<version>${miktex.version}</version>
									<classifier>${classifier}</classifier>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>prepare inkscape</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<outputDirectory>${inkscape.dir}</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>inkscape</groupId>
									<artifactId>inkscape</artifactId>
									<version>${inkscape.version}</version>
									<classifier>${classifier}</classifier>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>de.akquinet.maven</groupId>
				<artifactId>maven-latex-plugin</artifactId>
				<configuration>
					<settings>
						<!-- all tex main documents in this folder (including subfolders) will 
							be processed -->
						<texDirectory>tex</texDirectory>
						<!-- the generated artifacts will be copied to this folder relative 
							to ${project.reporting.outputDirectory} -->
						<outputDirectory>${latex.temp.out.dir}</outputDirectory>
						<!-- the working directory, for temporary files and LaTeX processing 
							relative to ${project.build.directory} -->
						<tempDirectory>${latex.temp.dir}</tempDirectory>
						<!-- clean up the working directory in the end? May be used for debugging -->
						<cleanUp>false</cleanUp>
						<!-- path to the TeX scripts, if none, it must be on the system path -->
						<texPath />
						<!-- the latex command -->
						<texCommand>pdflatex</texCommand>
						<!-- the bibtex command -->
						<bibtexCommand>bibtex</bibtexCommand>
						<!-- the arguments to use when calling latex -->
						<texCommandArgs>
						<!-- TODO: we need the shell escape to launch inkscape, but for some reason the inkscape process hangs and stalls the build
							 -->
							<texCommandArg>-shell-escape</texCommandArg>
							<texCommandArg>-interaction=nonstopmode</texCommandArg>
							<texCommandArg>--src-specials</texCommandArg>
						</texCommandArgs>
					</settings>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>latex</goal>
							<!--<goal>tex4ht</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
